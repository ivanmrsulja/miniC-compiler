Grammar

    0 $accept: program $end

    1 program: global_list function_list

    2 global_list: %empty
    3            | global_list global_var

    4 global_var: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN body

    9 parameter_list: %empty
   10               | parameters

   11 parameters: parameter
   12           | parameters _COMMA parameter

   13 parameter: _TYPE _ID

   14 $@2: %empty

   15 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   16 variable_list: %empty
   17              | variable_list var_start

   18 $@3: %empty

   19 var_start: _TYPE $@3 variable

   20 variable: vars declaration _SEMICOLON
   21         | _ID _LSQBRACKET _INT_NUMBER _RSQBRACKET _SEMICOLON

   22 declaration: %empty
   23            | _ASSIGN _INT_NUMBER
   24            | _ASSIGN _UINT_NUMBER

   25 vars: _ID
   26     | vars _COMMA _ID

   27 statement_list: %empty
   28               | statement_list statement

   29 statement: compound_statement
   30          | assignment_statement
   31          | if_statement
   32          | return_statement
   33          | unaryop _SEMICOLON
   34          | select_statement
   35          | para_statement
   36          | switch_statement
   37          | while_statement
   38          | function_call _SEMICOLON

   39 @4: %empty

   40 $@5: %empty

   41 while_statement: _WHILE @4 _LPAREN rel_exp _RPAREN $@5 statement

   42 @6: %empty

   43 switch_statement: _SWITCH _LPAREN _ID @6 _RPAREN _LBRACKET cases otherwise _RBRACKET

   44 cases: case
   45      | cases case

   46 $@7: %empty

   47 case: _CASE literal $@7 _COLON statement break

   48 break: %empty
   49      | _BREAK _SEMICOLON

   50 otherwise: %empty

   51 $@8: %empty

   52 otherwise: _OTHERWISE _COLON $@8 statement

   53 $@9: %empty

   54 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN literal _RPAREN $@9 statement

   55 $@10: %empty

   56 select_statement: _SELECT $@10 vars _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   57 $@11: %empty

   58 $@12: %empty

   59 compound_statement: _LBRACKET $@11 variable_list $@12 statement_list _RBRACKET

   60 $@13: %empty

   61 assignment_statement: _ID indexing $@13 _ASSIGN num_exp _SEMICOLON

   62 indexing: %empty
   63         | _LSQBRACKET _INT_NUMBER _RSQBRACKET

   64 num_exp: exp
   65        | num_exp _AROP exp

   66 conditional: _LPAREN rel_exp _RPAREN _QMARK half_exp _COLON half_exp

   67 exp: half_exp
   68    | full_exp

   69 half_exp: literal
   70         | _ID

   71 full_exp: function_call
   72         | _LPAREN num_exp _RPAREN
   73         | unaryop
   74         | conditional
   75         | _ID _LSQBRACKET _INT_NUMBER _RSQBRACKET

   76 unaryop: _ID indexing _UNOP

   77 literal: _INT_NUMBER
   78        | _UINT_NUMBER

   79 $@14: %empty

   80 function_call: _ID $@14 _LPAREN argument_list _RPAREN

   81 argument_list: %empty
   82              | arguments

   83 arguments: argument
   84          | arguments _COMMA argument

   85 argument: num_exp

   86 if_statement: if_part
   87             | if_part _ELSE statement

   88 @15: %empty

   89 $@16: %empty

   90 if_part: _IF _LPAREN @15 rel_exp $@16 _RPAREN statement

   91 rel_exp: num_exp _RELOP num_exp

   92 return_statement: _RETURN num_exp _SEMICOLON
   93                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 4 8 13 19
    _IF (259) 90
    _ELSE (260) 87
    _RETURN (261) 92 93
    _ID <s> (262) 4 8 13 21 25 26 43 54 56 61 70 75 76 80
    _INT_NUMBER <s> (263) 21 23 63 75 77
    _UINT_NUMBER <s> (264) 24 78
    _LPAREN (265) 8 41 43 54 56 66 72 80 90
    _RPAREN (266) 8 41 43 54 56 66 72 80 90
    _LBRACKET (267) 15 43 59
    _RBRACKET (268) 15 43 59
    _LSQBRACKET (269) 21 63 75
    _RSQBRACKET (270) 21 63 75
    _ASSIGN (271) 23 24 54 61
    _SEMICOLON (272) 4 20 21 33 38 49 56 61 92 93
    _AROP <i> (273) 65
    _RELOP <i> (274) 91
    _UNOP (275) 76
    _SELECT (276) 56
    _COMMA (277) 12 26 84
    _FROM (278) 56
    _WHERE (279) 56
    _PARA (280) 54
    _EN (281) 54
    _SWITCH (282) 43
    _CASE (283) 47
    _BREAK (284) 49
    _OTHERWISE (285) 52
    _COLON (286) 47 52 66
    _WHILE (287) 41
    _QMARK (288) 66
    ONLY_IF (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1
        on right: 0
    global_list (37)
        on left: 2 3
        on right: 1 3
    global_var (38)
        on left: 4
        on right: 3
    function_list (39)
        on left: 5 6
        on right: 1 6
    function (40)
        on left: 8
        on right: 5 6
    $@1 (41)
        on left: 7
        on right: 8
    parameter_list (42)
        on left: 9 10
        on right: 8
    parameters (43)
        on left: 11 12
        on right: 10 12
    parameter (44)
        on left: 13
        on right: 11 12
    body (45)
        on left: 15
        on right: 8
    $@2 (46)
        on left: 14
        on right: 15
    variable_list (47)
        on left: 16 17
        on right: 15 17 59
    var_start (48)
        on left: 19
        on right: 17
    $@3 (49)
        on left: 18
        on right: 19
    variable (50)
        on left: 20 21
        on right: 19
    declaration (51)
        on left: 22 23 24
        on right: 20
    vars (52)
        on left: 25 26
        on right: 20 26 56
    statement_list (53)
        on left: 27 28
        on right: 15 28 59
    statement (54)
        on left: 29 30 31 32 33 34 35 36 37 38
        on right: 28 41 47 52 54 87 90
    while_statement (55)
        on left: 41
        on right: 37
    @4 (56)
        on left: 39
        on right: 41
    $@5 (57)
        on left: 40
        on right: 41
    switch_statement (58)
        on left: 43
        on right: 36
    @6 (59)
        on left: 42
        on right: 43
    cases (60)
        on left: 44 45
        on right: 43 45
    case (61)
        on left: 47
        on right: 44 45
    $@7 (62)
        on left: 46
        on right: 47
    break (63)
        on left: 48 49
        on right: 47
    otherwise (64)
        on left: 50 52
        on right: 43
    $@8 (65)
        on left: 51
        on right: 52
    para_statement (66)
        on left: 54
        on right: 35
    $@9 (67)
        on left: 53
        on right: 54
    select_statement (68)
        on left: 56
        on right: 34
    $@10 (69)
        on left: 55
        on right: 56
    compound_statement (70)
        on left: 59
        on right: 29
    $@11 (71)
        on left: 57
        on right: 59
    $@12 (72)
        on left: 58
        on right: 59
    assignment_statement (73)
        on left: 61
        on right: 30
    $@13 (74)
        on left: 60
        on right: 61
    indexing <i> (75)
        on left: 62 63
        on right: 61 76
    num_exp <i> (76)
        on left: 64 65
        on right: 61 65 72 85 91 92
    conditional <i> (77)
        on left: 66
        on right: 74
    exp <i> (78)
        on left: 67 68
        on right: 64 65
    half_exp <i> (79)
        on left: 69 70
        on right: 66 67
    full_exp <i> (80)
        on left: 71 72 73 74 75
        on right: 68
    unaryop <i> (81)
        on left: 76
        on right: 33 73
    literal <i> (82)
        on left: 77 78
        on right: 47 54 69
    function_call <i> (83)
        on left: 80
        on right: 38 71
    $@14 (84)
        on left: 79
        on right: 80
    argument_list (85)
        on left: 81 82
        on right: 80
    arguments (86)
        on left: 83 84
        on right: 82 84
    argument <i> (87)
        on left: 85
        on right: 83 84
    if_statement (88)
        on left: 86 87
        on right: 31
    if_part <i> (89)
        on left: 90
        on right: 86 87
    @15 (90)
        on left: 88
        on right: 90
    $@16 (91)
        on left: 89
        on right: 90
    rel_exp <i> (92)
        on left: 91
        on right: 41 56 66 90
    return_statement (93)
        on left: 92 93
        on right: 32


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_list)

    program      go to state 1
    global_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_list . function_list
    3 global_list: global_list . global_var

    _TYPE  shift, and go to state 4

    global_var     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_var: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameter_list _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_list: global_list global_var .

    $default  reduce using rule 3 (global_list)


State 6

    1 program: global_list function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_var: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameter_list _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameter_list _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_var: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_var)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameter_list _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameter_list _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameter_list _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameter_list)

    parameter_list  go to state 16
    parameters      go to state 17
    parameter       go to state 18


State 15

   13 parameter: _TYPE . _ID

    _ID  shift, and go to state 19


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameter_list . _RPAREN body

    _RPAREN  shift, and go to state 20


State 17

   10 parameter_list: parameters .
   12 parameters: parameters . _COMMA parameter

    _COMMA  shift, and go to state 21

    $default  reduce using rule 10 (parameter_list)


State 18

   11 parameters: parameter .

    $default  reduce using rule 11 (parameters)


State 19

   13 parameter: _TYPE _ID .

    $default  reduce using rule 13 (parameter)


State 20

    8 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN . body

    _LBRACKET  shift, and go to state 22

    body  go to state 23


State 21

   12 parameters: parameters _COMMA . parameter

    _TYPE  shift, and go to state 15

    parameter  go to state 24


State 22

   15 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 25


State 23

    8 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN body .

    $default  reduce using rule 8 (function)


State 24

   12 parameters: parameters _COMMA parameter .

    $default  reduce using rule 12 (parameters)


State 25

   15 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   17 variable_list: variable_list . var_start

    _TYPE  shift, and go to state 26

    $default  reduce using rule 14 ($@2)

    $@2        go to state 27
    var_start  go to state 28


State 26

   19 var_start: _TYPE . $@3 variable

    $default  reduce using rule 18 ($@3)

    $@3  go to state 29


State 27

   15 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 27 (statement_list)

    statement_list  go to state 30


State 28

   17 variable_list: variable_list var_start .

    $default  reduce using rule 17 (variable_list)


State 29

   19 var_start: _TYPE $@3 . variable

    _ID  shift, and go to state 31

    variable  go to state 32
    vars      go to state 33


State 30

   15 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   28 statement_list: statement_list . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _RBRACKET  shift, and go to state 38
    _SELECT    shift, and go to state 39
    _PARA      shift, and go to state 40
    _SWITCH    shift, and go to state 41
    _WHILE     shift, and go to state 42

    statement             go to state 43
    while_statement       go to state 44
    switch_statement      go to state 45
    para_statement        go to state 46
    select_statement      go to state 47
    compound_statement    go to state 48
    assignment_statement  go to state 49
    unaryop               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 31

   21 variable: _ID . _LSQBRACKET _INT_NUMBER _RSQBRACKET _SEMICOLON
   25 vars: _ID .

    _LSQBRACKET  shift, and go to state 55

    $default  reduce using rule 25 (vars)


State 32

   19 var_start: _TYPE $@3 variable .

    $default  reduce using rule 19 (var_start)


State 33

   20 variable: vars . declaration _SEMICOLON
   26 vars: vars . _COMMA _ID

    _ASSIGN  shift, and go to state 56
    _COMMA   shift, and go to state 57

    $default  reduce using rule 22 (declaration)

    declaration  go to state 58


State 34

   90 if_part: _IF . _LPAREN @15 rel_exp $@16 _RPAREN statement

    _LPAREN  shift, and go to state 59


State 35

   92 return_statement: _RETURN . num_exp _SEMICOLON
   93                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 60
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62
    _LPAREN       shift, and go to state 63
    _SEMICOLON    shift, and go to state 64

    num_exp        go to state 65
    conditional    go to state 66
    exp            go to state 67
    half_exp       go to state 68
    full_exp       go to state 69
    unaryop        go to state 70
    literal        go to state 71
    function_call  go to state 72


State 36

   61 assignment_statement: _ID . indexing $@13 _ASSIGN num_exp _SEMICOLON
   76 unaryop: _ID . indexing _UNOP
   80 function_call: _ID . $@14 _LPAREN argument_list _RPAREN

    _LSQBRACKET  shift, and go to state 73

    _LPAREN   reduce using rule 79 ($@14)
    $default  reduce using rule 62 (indexing)

    indexing  go to state 74
    $@14      go to state 75


State 37

   59 compound_statement: _LBRACKET . $@11 variable_list $@12 statement_list _RBRACKET

    $default  reduce using rule 57 ($@11)

    $@11  go to state 76


State 38

   15 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 15 (body)


State 39

   56 select_statement: _SELECT . $@10 vars _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 55 ($@10)

    $@10  go to state 77


State 40

   54 para_statement: _PARA . _LPAREN _ID _ASSIGN literal _EN literal _RPAREN $@9 statement

    _LPAREN  shift, and go to state 78


State 41

   43 switch_statement: _SWITCH . _LPAREN _ID @6 _RPAREN _LBRACKET cases otherwise _RBRACKET

    _LPAREN  shift, and go to state 79


State 42

   41 while_statement: _WHILE . @4 _LPAREN rel_exp _RPAREN $@5 statement

    $default  reduce using rule 39 (@4)

    @4  go to state 80


State 43

   28 statement_list: statement_list statement .

    $default  reduce using rule 28 (statement_list)


State 44

   37 statement: while_statement .

    $default  reduce using rule 37 (statement)


State 45

   36 statement: switch_statement .

    $default  reduce using rule 36 (statement)


State 46

   35 statement: para_statement .

    $default  reduce using rule 35 (statement)


State 47

   34 statement: select_statement .

    $default  reduce using rule 34 (statement)


State 48

   29 statement: compound_statement .

    $default  reduce using rule 29 (statement)


State 49

   30 statement: assignment_statement .

    $default  reduce using rule 30 (statement)


State 50

   33 statement: unaryop . _SEMICOLON

    _SEMICOLON  shift, and go to state 81


State 51

   38 statement: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 82


State 52

   31 statement: if_statement .

    $default  reduce using rule 31 (statement)


State 53

   86 if_statement: if_part .
   87             | if_part . _ELSE statement

    _ELSE  shift, and go to state 83

    $default  reduce using rule 86 (if_statement)


State 54

   32 statement: return_statement .

    $default  reduce using rule 32 (statement)


State 55

   21 variable: _ID _LSQBRACKET . _INT_NUMBER _RSQBRACKET _SEMICOLON

    _INT_NUMBER  shift, and go to state 84


State 56

   23 declaration: _ASSIGN . _INT_NUMBER
   24            | _ASSIGN . _UINT_NUMBER

    _INT_NUMBER   shift, and go to state 85
    _UINT_NUMBER  shift, and go to state 86


State 57

   26 vars: vars _COMMA . _ID

    _ID  shift, and go to state 87


State 58

   20 variable: vars declaration . _SEMICOLON

    _SEMICOLON  shift, and go to state 88


State 59

   90 if_part: _IF _LPAREN . @15 rel_exp $@16 _RPAREN statement

    $default  reduce using rule 88 (@15)

    @15  go to state 89


State 60

   70 half_exp: _ID .
   75 full_exp: _ID . _LSQBRACKET _INT_NUMBER _RSQBRACKET
   76 unaryop: _ID . indexing _UNOP
   80 function_call: _ID . $@14 _LPAREN argument_list _RPAREN

    _LSQBRACKET  shift, and go to state 90

    _LPAREN   reduce using rule 79 ($@14)
    _UNOP     reduce using rule 62 (indexing)
    $default  reduce using rule 70 (half_exp)

    indexing  go to state 91
    $@14      go to state 75


State 61

   77 literal: _INT_NUMBER .

    $default  reduce using rule 77 (literal)


State 62

   78 literal: _UINT_NUMBER .

    $default  reduce using rule 78 (literal)


State 63

   66 conditional: _LPAREN . rel_exp _RPAREN _QMARK half_exp _COLON half_exp
   72 full_exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 60
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62
    _LPAREN       shift, and go to state 63

    num_exp        go to state 92
    conditional    go to state 66
    exp            go to state 67
    half_exp       go to state 68
    full_exp       go to state 69
    unaryop        go to state 70
    literal        go to state 71
    function_call  go to state 72
    rel_exp        go to state 93


State 64

   93 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 93 (return_statement)


State 65

   65 num_exp: num_exp . _AROP exp
   92 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 94
    _AROP       shift, and go to state 95


State 66

   74 full_exp: conditional .

    $default  reduce using rule 74 (full_exp)


State 67

   64 num_exp: exp .

    $default  reduce using rule 64 (num_exp)


State 68

   67 exp: half_exp .

    $default  reduce using rule 67 (exp)


State 69

   68 exp: full_exp .

    $default  reduce using rule 68 (exp)


State 70

   73 full_exp: unaryop .

    $default  reduce using rule 73 (full_exp)


State 71

   69 half_exp: literal .

    $default  reduce using rule 69 (half_exp)


State 72

   71 full_exp: function_call .

    $default  reduce using rule 71 (full_exp)


State 73

   63 indexing: _LSQBRACKET . _INT_NUMBER _RSQBRACKET

    _INT_NUMBER  shift, and go to state 96


State 74

   61 assignment_statement: _ID indexing . $@13 _ASSIGN num_exp _SEMICOLON
   76 unaryop: _ID indexing . _UNOP

    _UNOP  shift, and go to state 97

    $default  reduce using rule 60 ($@13)

    $@13  go to state 98


State 75

   80 function_call: _ID $@14 . _LPAREN argument_list _RPAREN

    _LPAREN  shift, and go to state 99


State 76

   59 compound_statement: _LBRACKET $@11 . variable_list $@12 statement_list _RBRACKET

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 100


State 77

   56 select_statement: _SELECT $@10 . vars _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 101

    vars  go to state 102


State 78

   54 para_statement: _PARA _LPAREN . _ID _ASSIGN literal _EN literal _RPAREN $@9 statement

    _ID  shift, and go to state 103


State 79

   43 switch_statement: _SWITCH _LPAREN . _ID @6 _RPAREN _LBRACKET cases otherwise _RBRACKET

    _ID  shift, and go to state 104


State 80

   41 while_statement: _WHILE @4 . _LPAREN rel_exp _RPAREN $@5 statement

    _LPAREN  shift, and go to state 105


State 81

   33 statement: unaryop _SEMICOLON .

    $default  reduce using rule 33 (statement)


State 82

   38 statement: function_call _SEMICOLON .

    $default  reduce using rule 38 (statement)


State 83

   87 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _SELECT    shift, and go to state 39
    _PARA      shift, and go to state 40
    _SWITCH    shift, and go to state 41
    _WHILE     shift, and go to state 42

    statement             go to state 106
    while_statement       go to state 44
    switch_statement      go to state 45
    para_statement        go to state 46
    select_statement      go to state 47
    compound_statement    go to state 48
    assignment_statement  go to state 49
    unaryop               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 84

   21 variable: _ID _LSQBRACKET _INT_NUMBER . _RSQBRACKET _SEMICOLON

    _RSQBRACKET  shift, and go to state 107


State 85

   23 declaration: _ASSIGN _INT_NUMBER .

    $default  reduce using rule 23 (declaration)


State 86

   24 declaration: _ASSIGN _UINT_NUMBER .

    $default  reduce using rule 24 (declaration)


State 87

   26 vars: vars _COMMA _ID .

    $default  reduce using rule 26 (vars)


State 88

   20 variable: vars declaration _SEMICOLON .

    $default  reduce using rule 20 (variable)


State 89

   90 if_part: _IF _LPAREN @15 . rel_exp $@16 _RPAREN statement

    _ID           shift, and go to state 60
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62
    _LPAREN       shift, and go to state 63

    num_exp        go to state 108
    conditional    go to state 66
    exp            go to state 67
    half_exp       go to state 68
    full_exp       go to state 69
    unaryop        go to state 70
    literal        go to state 71
    function_call  go to state 72
    rel_exp        go to state 109


State 90

   63 indexing: _LSQBRACKET . _INT_NUMBER _RSQBRACKET
   75 full_exp: _ID _LSQBRACKET . _INT_NUMBER _RSQBRACKET

    _INT_NUMBER  shift, and go to state 110


State 91

   76 unaryop: _ID indexing . _UNOP

    _UNOP  shift, and go to state 97


State 92

   65 num_exp: num_exp . _AROP exp
   72 full_exp: _LPAREN num_exp . _RPAREN
   91 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 111
    _AROP    shift, and go to state 95
    _RELOP   shift, and go to state 112


State 93

   66 conditional: _LPAREN rel_exp . _RPAREN _QMARK half_exp _COLON half_exp

    _RPAREN  shift, and go to state 113


State 94

   92 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 92 (return_statement)


State 95

   65 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 60
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62
    _LPAREN       shift, and go to state 63

    conditional    go to state 66
    exp            go to state 114
    half_exp       go to state 68
    full_exp       go to state 69
    unaryop        go to state 70
    literal        go to state 71
    function_call  go to state 72


State 96

   63 indexing: _LSQBRACKET _INT_NUMBER . _RSQBRACKET

    _RSQBRACKET  shift, and go to state 115


State 97

   76 unaryop: _ID indexing _UNOP .

    $default  reduce using rule 76 (unaryop)


State 98

   61 assignment_statement: _ID indexing $@13 . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 116


State 99

   80 function_call: _ID $@14 _LPAREN . argument_list _RPAREN

    _ID           shift, and go to state 60
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62
    _LPAREN       shift, and go to state 63

    $default  reduce using rule 81 (argument_list)

    num_exp        go to state 117
    conditional    go to state 66
    exp            go to state 67
    half_exp       go to state 68
    full_exp       go to state 69
    unaryop        go to state 70
    literal        go to state 71
    function_call  go to state 72
    argument_list  go to state 118
    arguments      go to state 119
    argument       go to state 120


State 100

   17 variable_list: variable_list . var_start
   59 compound_statement: _LBRACKET $@11 variable_list . $@12 statement_list _RBRACKET

    _TYPE  shift, and go to state 26

    $default  reduce using rule 58 ($@12)

    var_start  go to state 28
    $@12       go to state 121


State 101

   25 vars: _ID .

    $default  reduce using rule 25 (vars)


State 102

   26 vars: vars . _COMMA _ID
   56 select_statement: _SELECT $@10 vars . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _COMMA  shift, and go to state 57
    _FROM   shift, and go to state 122


State 103

   54 para_statement: _PARA _LPAREN _ID . _ASSIGN literal _EN literal _RPAREN $@9 statement

    _ASSIGN  shift, and go to state 123


State 104

   43 switch_statement: _SWITCH _LPAREN _ID . @6 _RPAREN _LBRACKET cases otherwise _RBRACKET

    $default  reduce using rule 42 (@6)

    @6  go to state 124


State 105

   41 while_statement: _WHILE @4 _LPAREN . rel_exp _RPAREN $@5 statement

    _ID           shift, and go to state 60
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62
    _LPAREN       shift, and go to state 63

    num_exp        go to state 108
    conditional    go to state 66
    exp            go to state 67
    half_exp       go to state 68
    full_exp       go to state 69
    unaryop        go to state 70
    literal        go to state 71
    function_call  go to state 72
    rel_exp        go to state 125


State 106

   87 if_statement: if_part _ELSE statement .

    $default  reduce using rule 87 (if_statement)


State 107

   21 variable: _ID _LSQBRACKET _INT_NUMBER _RSQBRACKET . _SEMICOLON

    _SEMICOLON  shift, and go to state 126


State 108

   65 num_exp: num_exp . _AROP exp
   91 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 95
    _RELOP  shift, and go to state 112


State 109

   90 if_part: _IF _LPAREN @15 rel_exp . $@16 _RPAREN statement

    $default  reduce using rule 89 ($@16)

    $@16  go to state 127


State 110

   63 indexing: _LSQBRACKET _INT_NUMBER . _RSQBRACKET
   75 full_exp: _ID _LSQBRACKET _INT_NUMBER . _RSQBRACKET

    _RSQBRACKET  shift, and go to state 128


State 111

   72 full_exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 72 (full_exp)


State 112

   91 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 60
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62
    _LPAREN       shift, and go to state 63

    num_exp        go to state 129
    conditional    go to state 66
    exp            go to state 67
    half_exp       go to state 68
    full_exp       go to state 69
    unaryop        go to state 70
    literal        go to state 71
    function_call  go to state 72


State 113

   66 conditional: _LPAREN rel_exp _RPAREN . _QMARK half_exp _COLON half_exp

    _QMARK  shift, and go to state 130


State 114

   65 num_exp: num_exp _AROP exp .

    $default  reduce using rule 65 (num_exp)


State 115

   63 indexing: _LSQBRACKET _INT_NUMBER _RSQBRACKET .

    $default  reduce using rule 63 (indexing)


State 116

   61 assignment_statement: _ID indexing $@13 _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 60
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62
    _LPAREN       shift, and go to state 63

    num_exp        go to state 131
    conditional    go to state 66
    exp            go to state 67
    half_exp       go to state 68
    full_exp       go to state 69
    unaryop        go to state 70
    literal        go to state 71
    function_call  go to state 72


State 117

   65 num_exp: num_exp . _AROP exp
   85 argument: num_exp .

    _AROP  shift, and go to state 95

    $default  reduce using rule 85 (argument)


State 118

   80 function_call: _ID $@14 _LPAREN argument_list . _RPAREN

    _RPAREN  shift, and go to state 132


State 119

   82 argument_list: arguments .
   84 arguments: arguments . _COMMA argument

    _COMMA  shift, and go to state 133

    $default  reduce using rule 82 (argument_list)


State 120

   83 arguments: argument .

    $default  reduce using rule 83 (arguments)


State 121

   59 compound_statement: _LBRACKET $@11 variable_list $@12 . statement_list _RBRACKET

    $default  reduce using rule 27 (statement_list)

    statement_list  go to state 134


State 122

   56 select_statement: _SELECT $@10 vars _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 135


State 123

   54 para_statement: _PARA _LPAREN _ID _ASSIGN . literal _EN literal _RPAREN $@9 statement

    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62

    literal  go to state 136


State 124

   43 switch_statement: _SWITCH _LPAREN _ID @6 . _RPAREN _LBRACKET cases otherwise _RBRACKET

    _RPAREN  shift, and go to state 137


State 125

   41 while_statement: _WHILE @4 _LPAREN rel_exp . _RPAREN $@5 statement

    _RPAREN  shift, and go to state 138


State 126

   21 variable: _ID _LSQBRACKET _INT_NUMBER _RSQBRACKET _SEMICOLON .

    $default  reduce using rule 21 (variable)


State 127

   90 if_part: _IF _LPAREN @15 rel_exp $@16 . _RPAREN statement

    _RPAREN  shift, and go to state 139


State 128

   63 indexing: _LSQBRACKET _INT_NUMBER _RSQBRACKET .
   75 full_exp: _ID _LSQBRACKET _INT_NUMBER _RSQBRACKET .

    _UNOP     reduce using rule 63 (indexing)
    $default  reduce using rule 75 (full_exp)


State 129

   65 num_exp: num_exp . _AROP exp
   91 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 95

    $default  reduce using rule 91 (rel_exp)


State 130

   66 conditional: _LPAREN rel_exp _RPAREN _QMARK . half_exp _COLON half_exp

    _ID           shift, and go to state 140
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62

    half_exp  go to state 141
    literal   go to state 71


State 131

   61 assignment_statement: _ID indexing $@13 _ASSIGN num_exp . _SEMICOLON
   65 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 142
    _AROP       shift, and go to state 95


State 132

   80 function_call: _ID $@14 _LPAREN argument_list _RPAREN .

    $default  reduce using rule 80 (function_call)


State 133

   84 arguments: arguments _COMMA . argument

    _ID           shift, and go to state 60
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62
    _LPAREN       shift, and go to state 63

    num_exp        go to state 117
    conditional    go to state 66
    exp            go to state 67
    half_exp       go to state 68
    full_exp       go to state 69
    unaryop        go to state 70
    literal        go to state 71
    function_call  go to state 72
    argument       go to state 143


State 134

   28 statement_list: statement_list . statement
   59 compound_statement: _LBRACKET $@11 variable_list $@12 statement_list . _RBRACKET

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _RBRACKET  shift, and go to state 144
    _SELECT    shift, and go to state 39
    _PARA      shift, and go to state 40
    _SWITCH    shift, and go to state 41
    _WHILE     shift, and go to state 42

    statement             go to state 43
    while_statement       go to state 44
    switch_statement      go to state 45
    para_statement        go to state 46
    select_statement      go to state 47
    compound_statement    go to state 48
    assignment_statement  go to state 49
    unaryop               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 135

   56 select_statement: _SELECT $@10 vars _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 145


State 136

   54 para_statement: _PARA _LPAREN _ID _ASSIGN literal . _EN literal _RPAREN $@9 statement

    _EN  shift, and go to state 146


State 137

   43 switch_statement: _SWITCH _LPAREN _ID @6 _RPAREN . _LBRACKET cases otherwise _RBRACKET

    _LBRACKET  shift, and go to state 147


State 138

   41 while_statement: _WHILE @4 _LPAREN rel_exp _RPAREN . $@5 statement

    $default  reduce using rule 40 ($@5)

    $@5  go to state 148


State 139

   90 if_part: _IF _LPAREN @15 rel_exp $@16 _RPAREN . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _SELECT    shift, and go to state 39
    _PARA      shift, and go to state 40
    _SWITCH    shift, and go to state 41
    _WHILE     shift, and go to state 42

    statement             go to state 149
    while_statement       go to state 44
    switch_statement      go to state 45
    para_statement        go to state 46
    select_statement      go to state 47
    compound_statement    go to state 48
    assignment_statement  go to state 49
    unaryop               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 140

   70 half_exp: _ID .

    $default  reduce using rule 70 (half_exp)


State 141

   66 conditional: _LPAREN rel_exp _RPAREN _QMARK half_exp . _COLON half_exp

    _COLON  shift, and go to state 150


State 142

   61 assignment_statement: _ID indexing $@13 _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 61 (assignment_statement)


State 143

   84 arguments: arguments _COMMA argument .

    $default  reduce using rule 84 (arguments)


State 144

   59 compound_statement: _LBRACKET $@11 variable_list $@12 statement_list _RBRACKET .

    $default  reduce using rule 59 (compound_statement)


State 145

   56 select_statement: _SELECT $@10 vars _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 151


State 146

   54 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN . literal _RPAREN $@9 statement

    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62

    literal  go to state 152


State 147

   43 switch_statement: _SWITCH _LPAREN _ID @6 _RPAREN _LBRACKET . cases otherwise _RBRACKET

    _CASE  shift, and go to state 153

    cases  go to state 154
    case   go to state 155


State 148

   41 while_statement: _WHILE @4 _LPAREN rel_exp _RPAREN $@5 . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _SELECT    shift, and go to state 39
    _PARA      shift, and go to state 40
    _SWITCH    shift, and go to state 41
    _WHILE     shift, and go to state 42

    statement             go to state 156
    while_statement       go to state 44
    switch_statement      go to state 45
    para_statement        go to state 46
    select_statement      go to state 47
    compound_statement    go to state 48
    assignment_statement  go to state 49
    unaryop               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 149

   90 if_part: _IF _LPAREN @15 rel_exp $@16 _RPAREN statement .

    $default  reduce using rule 90 (if_part)


State 150

   66 conditional: _LPAREN rel_exp _RPAREN _QMARK half_exp _COLON . half_exp

    _ID           shift, and go to state 140
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62

    half_exp  go to state 157
    literal   go to state 71


State 151

   56 select_statement: _SELECT $@10 vars _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 60
    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62
    _LPAREN       shift, and go to state 63

    num_exp        go to state 108
    conditional    go to state 66
    exp            go to state 67
    half_exp       go to state 68
    full_exp       go to state 69
    unaryop        go to state 70
    literal        go to state 71
    function_call  go to state 72
    rel_exp        go to state 158


State 152

   54 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN literal . _RPAREN $@9 statement

    _RPAREN  shift, and go to state 159


State 153

   47 case: _CASE . literal $@7 _COLON statement break

    _INT_NUMBER   shift, and go to state 61
    _UINT_NUMBER  shift, and go to state 62

    literal  go to state 160


State 154

   43 switch_statement: _SWITCH _LPAREN _ID @6 _RPAREN _LBRACKET cases . otherwise _RBRACKET
   45 cases: cases . case

    _CASE       shift, and go to state 153
    _OTHERWISE  shift, and go to state 161

    $default  reduce using rule 50 (otherwise)

    case       go to state 162
    otherwise  go to state 163


State 155

   44 cases: case .

    $default  reduce using rule 44 (cases)


State 156

   41 while_statement: _WHILE @4 _LPAREN rel_exp _RPAREN $@5 statement .

    $default  reduce using rule 41 (while_statement)


State 157

   66 conditional: _LPAREN rel_exp _RPAREN _QMARK half_exp _COLON half_exp .

    $default  reduce using rule 66 (conditional)


State 158

   56 select_statement: _SELECT $@10 vars _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 164


State 159

   54 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN literal _RPAREN . $@9 statement

    $default  reduce using rule 53 ($@9)

    $@9  go to state 165


State 160

   47 case: _CASE literal . $@7 _COLON statement break

    $default  reduce using rule 46 ($@7)

    $@7  go to state 166


State 161

   52 otherwise: _OTHERWISE . _COLON $@8 statement

    _COLON  shift, and go to state 167


State 162

   45 cases: cases case .

    $default  reduce using rule 45 (cases)


State 163

   43 switch_statement: _SWITCH _LPAREN _ID @6 _RPAREN _LBRACKET cases otherwise . _RBRACKET

    _RBRACKET  shift, and go to state 168


State 164

   56 select_statement: _SELECT $@10 vars _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 169


State 165

   54 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN literal _RPAREN $@9 . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _SELECT    shift, and go to state 39
    _PARA      shift, and go to state 40
    _SWITCH    shift, and go to state 41
    _WHILE     shift, and go to state 42

    statement             go to state 170
    while_statement       go to state 44
    switch_statement      go to state 45
    para_statement        go to state 46
    select_statement      go to state 47
    compound_statement    go to state 48
    assignment_statement  go to state 49
    unaryop               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 166

   47 case: _CASE literal $@7 . _COLON statement break

    _COLON  shift, and go to state 171


State 167

   52 otherwise: _OTHERWISE _COLON . $@8 statement

    $default  reduce using rule 51 ($@8)

    $@8  go to state 172


State 168

   43 switch_statement: _SWITCH _LPAREN _ID @6 _RPAREN _LBRACKET cases otherwise _RBRACKET .

    $default  reduce using rule 43 (switch_statement)


State 169

   56 select_statement: _SELECT $@10 vars _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 56 (select_statement)


State 170

   54 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN literal _RPAREN $@9 statement .

    $default  reduce using rule 54 (para_statement)


State 171

   47 case: _CASE literal $@7 _COLON . statement break

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _SELECT    shift, and go to state 39
    _PARA      shift, and go to state 40
    _SWITCH    shift, and go to state 41
    _WHILE     shift, and go to state 42

    statement             go to state 173
    while_statement       go to state 44
    switch_statement      go to state 45
    para_statement        go to state 46
    select_statement      go to state 47
    compound_statement    go to state 48
    assignment_statement  go to state 49
    unaryop               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 172

   52 otherwise: _OTHERWISE _COLON $@8 . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _SELECT    shift, and go to state 39
    _PARA      shift, and go to state 40
    _SWITCH    shift, and go to state 41
    _WHILE     shift, and go to state 42

    statement             go to state 174
    while_statement       go to state 44
    switch_statement      go to state 45
    para_statement        go to state 46
    select_statement      go to state 47
    compound_statement    go to state 48
    assignment_statement  go to state 49
    unaryop               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 173

   47 case: _CASE literal $@7 _COLON statement . break

    _BREAK  shift, and go to state 175

    $default  reduce using rule 48 (break)

    break  go to state 176


State 174

   52 otherwise: _OTHERWISE _COLON $@8 statement .

    $default  reduce using rule 52 (otherwise)


State 175

   49 break: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 177


State 176

   47 case: _CASE literal $@7 _COLON statement break .

    $default  reduce using rule 47 (case)


State 177

   49 break: _BREAK _SEMICOLON .

    $default  reduce using rule 49 (break)
