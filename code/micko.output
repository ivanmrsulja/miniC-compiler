Grammar

    0 $accept: program $end

    1 program: global_list function_list

    2 global_list: %empty
    3            | global_list global_var

    4 global_var: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN body

    9 parameter_list: %empty
   10               | parameters

   11 parameters: parameter
   12           | parameters _COMMA parameter

   13 parameter: _TYPE _ID

   14 $@2: %empty

   15 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   16 variable_list: %empty
   17              | variable_list variable

   18 $@3: %empty

   19 variable: _TYPE $@3 vars declaration _SEMICOLON

   20 declaration: %empty
   21            | _ASSIGN _INT_NUMBER
   22            | _ASSIGN _UINT_NUMBER

   23 vars: _ID
   24     | vars _COMMA _ID

   25 statement_list: %empty
   26               | statement_list statement

   27 statement: compound_statement
   28          | assignment_statement
   29          | if_statement
   30          | return_statement
   31          | unaryop _SEMICOLON
   32          | select_statement
   33          | para_statement
   34          | switch_statement
   35          | while_statement
   36          | function_call _SEMICOLON

   37 while_statement: _WHILE _LPAREN rel_exp _RPAREN statement

   38 $@4: %empty

   39 switch_statement: _SWITCH _LPAREN _ID $@4 _RPAREN _LBRACKET cases otherwise _RBRACKET

   40 cases: case
   41      | cases case

   42 $@5: %empty

   43 case: _CASE literal $@5 _COLON statement break

   44 break: %empty
   45      | _BREAK _SEMICOLON

   46 otherwise: %empty

   47 $@6: %empty

   48 otherwise: _OTHERWISE _COLON $@6 statement

   49 $@7: %empty

   50 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN literal _RPAREN $@7 statement

   51 $@8: %empty

   52 select_statement: _SELECT $@8 vars _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   53 $@9: %empty

   54 $@10: %empty

   55 compound_statement: _LBRACKET $@9 variable_list $@10 statement_list _RBRACKET

   56 $@11: %empty

   57 assignment_statement: _ID $@11 _ASSIGN num_exp _SEMICOLON

   58 num_exp: exp
   59        | num_exp _AROP exp

   60 exp: literal
   61    | _ID
   62    | function_call
   63    | _LPAREN num_exp _RPAREN
   64    | unaryop

   65 unaryop: _ID _UNOP

   66 literal: _INT_NUMBER
   67        | _UINT_NUMBER

   68 $@12: %empty

   69 function_call: _ID $@12 _LPAREN argument_list _RPAREN

   70 argument_list: %empty
   71              | arguments

   72 arguments: argument
   73          | arguments _COMMA argument

   74 argument: num_exp

   75 if_statement: if_part
   76             | if_part _ELSE statement

   77 @13: %empty

   78 $@14: %empty

   79 if_part: _IF _LPAREN @13 rel_exp $@14 _RPAREN statement

   80 rel_exp: num_exp _RELOP num_exp

   81 return_statement: _RETURN num_exp _SEMICOLON
   82                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 4 8 13 19
    _IF (259) 79
    _ELSE (260) 76
    _RETURN (261) 81 82
    _ID <s> (262) 4 8 13 23 24 39 50 52 57 61 65 69
    _INT_NUMBER <s> (263) 21 66
    _UINT_NUMBER <s> (264) 22 67
    _LPAREN (265) 8 37 39 50 52 63 69 79
    _RPAREN (266) 8 37 39 50 52 63 69 79
    _LBRACKET (267) 15 39 55
    _RBRACKET (268) 15 39 55
    _ASSIGN (269) 21 22 50 57
    _SEMICOLON (270) 4 19 31 36 45 52 57 81 82
    _AROP <i> (271) 59
    _RELOP <i> (272) 80
    _UNOP (273) 65
    _SELECT (274) 52
    _COMMA (275) 12 24 73
    _FROM (276) 52
    _WHERE (277) 52
    _PARA (278) 50
    _EN (279) 50
    _SWITCH (280) 39
    _CASE (281) 43
    _BREAK (282) 45
    _OTHERWISE (283) 48
    _COLON (284) 43 48
    _WHILE (285) 37
    ONLY_IF (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1
        on right: 0
    global_list (34)
        on left: 2 3
        on right: 1 3
    global_var (35)
        on left: 4
        on right: 3
    function_list (36)
        on left: 5 6
        on right: 1 6
    function (37)
        on left: 8
        on right: 5 6
    $@1 (38)
        on left: 7
        on right: 8
    parameter_list (39)
        on left: 9 10
        on right: 8
    parameters (40)
        on left: 11 12
        on right: 10 12
    parameter (41)
        on left: 13
        on right: 11 12
    body (42)
        on left: 15
        on right: 8
    $@2 (43)
        on left: 14
        on right: 15
    variable_list (44)
        on left: 16 17
        on right: 15 17 55
    variable (45)
        on left: 19
        on right: 17
    $@3 (46)
        on left: 18
        on right: 19
    declaration (47)
        on left: 20 21 22
        on right: 19
    vars (48)
        on left: 23 24
        on right: 19 24 52
    statement_list (49)
        on left: 25 26
        on right: 15 26 55
    statement (50)
        on left: 27 28 29 30 31 32 33 34 35 36
        on right: 26 37 43 48 50 76 79
    while_statement (51)
        on left: 37
        on right: 35
    switch_statement (52)
        on left: 39
        on right: 34
    $@4 (53)
        on left: 38
        on right: 39
    cases (54)
        on left: 40 41
        on right: 39 41
    case (55)
        on left: 43
        on right: 40 41
    $@5 (56)
        on left: 42
        on right: 43
    break (57)
        on left: 44 45
        on right: 43
    otherwise (58)
        on left: 46 48
        on right: 39
    $@6 (59)
        on left: 47
        on right: 48
    para_statement (60)
        on left: 50
        on right: 33
    $@7 (61)
        on left: 49
        on right: 50
    select_statement (62)
        on left: 52
        on right: 32
    $@8 (63)
        on left: 51
        on right: 52
    compound_statement (64)
        on left: 55
        on right: 27
    $@9 (65)
        on left: 53
        on right: 55
    $@10 (66)
        on left: 54
        on right: 55
    assignment_statement (67)
        on left: 57
        on right: 28
    $@11 (68)
        on left: 56
        on right: 57
    num_exp <i> (69)
        on left: 58 59
        on right: 57 59 63 74 80 81
    exp <i> (70)
        on left: 60 61 62 63 64
        on right: 58 59
    unaryop <i> (71)
        on left: 65
        on right: 31 64
    literal <i> (72)
        on left: 66 67
        on right: 43 50 60
    function_call <i> (73)
        on left: 69
        on right: 36 62
    $@12 (74)
        on left: 68
        on right: 69
    argument_list (75)
        on left: 70 71
        on right: 69
    arguments (76)
        on left: 72 73
        on right: 71 73
    argument <i> (77)
        on left: 74
        on right: 72 73
    if_statement (78)
        on left: 75 76
        on right: 29
    if_part <i> (79)
        on left: 79
        on right: 75 76
    @13 (80)
        on left: 77
        on right: 79
    $@14 (81)
        on left: 78
        on right: 79
    rel_exp <i> (82)
        on left: 80
        on right: 37 52 79
    return_statement (83)
        on left: 81 82
        on right: 30


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_list)

    program      go to state 1
    global_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_list . function_list
    3 global_list: global_list . global_var

    _TYPE  shift, and go to state 4

    global_var     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_var: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameter_list _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_list: global_list global_var .

    $default  reduce using rule 3 (global_list)


State 6

    1 program: global_list function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_var: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameter_list _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameter_list _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_var: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_var)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameter_list _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameter_list _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameter_list _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameter_list)

    parameter_list  go to state 16
    parameters      go to state 17
    parameter       go to state 18


State 15

   13 parameter: _TYPE . _ID

    _ID  shift, and go to state 19


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameter_list . _RPAREN body

    _RPAREN  shift, and go to state 20


State 17

   10 parameter_list: parameters .
   12 parameters: parameters . _COMMA parameter

    _COMMA  shift, and go to state 21

    $default  reduce using rule 10 (parameter_list)


State 18

   11 parameters: parameter .

    $default  reduce using rule 11 (parameters)


State 19

   13 parameter: _TYPE _ID .

    $default  reduce using rule 13 (parameter)


State 20

    8 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN . body

    _LBRACKET  shift, and go to state 22

    body  go to state 23


State 21

   12 parameters: parameters _COMMA . parameter

    _TYPE  shift, and go to state 15

    parameter  go to state 24


State 22

   15 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 25


State 23

    8 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN body .

    $default  reduce using rule 8 (function)


State 24

   12 parameters: parameters _COMMA parameter .

    $default  reduce using rule 12 (parameters)


State 25

   15 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   17 variable_list: variable_list . variable

    _TYPE  shift, and go to state 26

    $default  reduce using rule 14 ($@2)

    $@2       go to state 27
    variable  go to state 28


State 26

   19 variable: _TYPE . $@3 vars declaration _SEMICOLON

    $default  reduce using rule 18 ($@3)

    $@3  go to state 29


State 27

   15 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 25 (statement_list)

    statement_list  go to state 30


State 28

   17 variable_list: variable_list variable .

    $default  reduce using rule 17 (variable_list)


State 29

   19 variable: _TYPE $@3 . vars declaration _SEMICOLON

    _ID  shift, and go to state 31

    vars  go to state 32


State 30

   15 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   26 statement_list: statement_list . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _RBRACKET  shift, and go to state 37
    _SELECT    shift, and go to state 38
    _PARA      shift, and go to state 39
    _SWITCH    shift, and go to state 40
    _WHILE     shift, and go to state 41

    statement             go to state 42
    while_statement       go to state 43
    switch_statement      go to state 44
    para_statement        go to state 45
    select_statement      go to state 46
    compound_statement    go to state 47
    assignment_statement  go to state 48
    unaryop               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 31

   23 vars: _ID .

    $default  reduce using rule 23 (vars)


State 32

   19 variable: _TYPE $@3 vars . declaration _SEMICOLON
   24 vars: vars . _COMMA _ID

    _ASSIGN  shift, and go to state 54
    _COMMA   shift, and go to state 55

    $default  reduce using rule 20 (declaration)

    declaration  go to state 56


State 33

   79 if_part: _IF . _LPAREN @13 rel_exp $@14 _RPAREN statement

    _LPAREN  shift, and go to state 57


State 34

   81 return_statement: _RETURN . num_exp _SEMICOLON
   82                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61
    _SEMICOLON    shift, and go to state 62

    num_exp        go to state 63
    exp            go to state 64
    unaryop        go to state 65
    literal        go to state 66
    function_call  go to state 67


State 35

   57 assignment_statement: _ID . $@11 _ASSIGN num_exp _SEMICOLON
   65 unaryop: _ID . _UNOP
   69 function_call: _ID . $@12 _LPAREN argument_list _RPAREN

    _UNOP  shift, and go to state 68

    _LPAREN   reduce using rule 68 ($@12)
    $default  reduce using rule 56 ($@11)

    $@11  go to state 69
    $@12  go to state 70


State 36

   55 compound_statement: _LBRACKET . $@9 variable_list $@10 statement_list _RBRACKET

    $default  reduce using rule 53 ($@9)

    $@9  go to state 71


State 37

   15 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 15 (body)


State 38

   52 select_statement: _SELECT . $@8 vars _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 51 ($@8)

    $@8  go to state 72


State 39

   50 para_statement: _PARA . _LPAREN _ID _ASSIGN literal _EN literal _RPAREN $@7 statement

    _LPAREN  shift, and go to state 73


State 40

   39 switch_statement: _SWITCH . _LPAREN _ID $@4 _RPAREN _LBRACKET cases otherwise _RBRACKET

    _LPAREN  shift, and go to state 74


State 41

   37 while_statement: _WHILE . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 75


State 42

   26 statement_list: statement_list statement .

    $default  reduce using rule 26 (statement_list)


State 43

   35 statement: while_statement .

    $default  reduce using rule 35 (statement)


State 44

   34 statement: switch_statement .

    $default  reduce using rule 34 (statement)


State 45

   33 statement: para_statement .

    $default  reduce using rule 33 (statement)


State 46

   32 statement: select_statement .

    $default  reduce using rule 32 (statement)


State 47

   27 statement: compound_statement .

    $default  reduce using rule 27 (statement)


State 48

   28 statement: assignment_statement .

    $default  reduce using rule 28 (statement)


State 49

   31 statement: unaryop . _SEMICOLON

    _SEMICOLON  shift, and go to state 76


State 50

   36 statement: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 77


State 51

   29 statement: if_statement .

    $default  reduce using rule 29 (statement)


State 52

   75 if_statement: if_part .
   76             | if_part . _ELSE statement

    _ELSE  shift, and go to state 78

    $default  reduce using rule 75 (if_statement)


State 53

   30 statement: return_statement .

    $default  reduce using rule 30 (statement)


State 54

   21 declaration: _ASSIGN . _INT_NUMBER
   22            | _ASSIGN . _UINT_NUMBER

    _INT_NUMBER   shift, and go to state 79
    _UINT_NUMBER  shift, and go to state 80


State 55

   24 vars: vars _COMMA . _ID

    _ID  shift, and go to state 81


State 56

   19 variable: _TYPE $@3 vars declaration . _SEMICOLON

    _SEMICOLON  shift, and go to state 82


State 57

   79 if_part: _IF _LPAREN . @13 rel_exp $@14 _RPAREN statement

    $default  reduce using rule 77 (@13)

    @13  go to state 83


State 58

   61 exp: _ID .
   65 unaryop: _ID . _UNOP
   69 function_call: _ID . $@12 _LPAREN argument_list _RPAREN

    _UNOP  shift, and go to state 68

    _LPAREN   reduce using rule 68 ($@12)
    $default  reduce using rule 61 (exp)

    $@12  go to state 70


State 59

   66 literal: _INT_NUMBER .

    $default  reduce using rule 66 (literal)


State 60

   67 literal: _UINT_NUMBER .

    $default  reduce using rule 67 (literal)


State 61

   63 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 84
    exp            go to state 64
    unaryop        go to state 65
    literal        go to state 66
    function_call  go to state 67


State 62

   82 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 82 (return_statement)


State 63

   59 num_exp: num_exp . _AROP exp
   81 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 85
    _AROP       shift, and go to state 86


State 64

   58 num_exp: exp .

    $default  reduce using rule 58 (num_exp)


State 65

   64 exp: unaryop .

    $default  reduce using rule 64 (exp)


State 66

   60 exp: literal .

    $default  reduce using rule 60 (exp)


State 67

   62 exp: function_call .

    $default  reduce using rule 62 (exp)


State 68

   65 unaryop: _ID _UNOP .

    $default  reduce using rule 65 (unaryop)


State 69

   57 assignment_statement: _ID $@11 . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 87


State 70

   69 function_call: _ID $@12 . _LPAREN argument_list _RPAREN

    _LPAREN  shift, and go to state 88


State 71

   55 compound_statement: _LBRACKET $@9 . variable_list $@10 statement_list _RBRACKET

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 89


State 72

   52 select_statement: _SELECT $@8 . vars _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 31

    vars  go to state 90


State 73

   50 para_statement: _PARA _LPAREN . _ID _ASSIGN literal _EN literal _RPAREN $@7 statement

    _ID  shift, and go to state 91


State 74

   39 switch_statement: _SWITCH _LPAREN . _ID $@4 _RPAREN _LBRACKET cases otherwise _RBRACKET

    _ID  shift, and go to state 92


State 75

   37 while_statement: _WHILE _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 93
    exp            go to state 64
    unaryop        go to state 65
    literal        go to state 66
    function_call  go to state 67
    rel_exp        go to state 94


State 76

   31 statement: unaryop _SEMICOLON .

    $default  reduce using rule 31 (statement)


State 77

   36 statement: function_call _SEMICOLON .

    $default  reduce using rule 36 (statement)


State 78

   76 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _SELECT    shift, and go to state 38
    _PARA      shift, and go to state 39
    _SWITCH    shift, and go to state 40
    _WHILE     shift, and go to state 41

    statement             go to state 95
    while_statement       go to state 43
    switch_statement      go to state 44
    para_statement        go to state 45
    select_statement      go to state 46
    compound_statement    go to state 47
    assignment_statement  go to state 48
    unaryop               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 79

   21 declaration: _ASSIGN _INT_NUMBER .

    $default  reduce using rule 21 (declaration)


State 80

   22 declaration: _ASSIGN _UINT_NUMBER .

    $default  reduce using rule 22 (declaration)


State 81

   24 vars: vars _COMMA _ID .

    $default  reduce using rule 24 (vars)


State 82

   19 variable: _TYPE $@3 vars declaration _SEMICOLON .

    $default  reduce using rule 19 (variable)


State 83

   79 if_part: _IF _LPAREN @13 . rel_exp $@14 _RPAREN statement

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 93
    exp            go to state 64
    unaryop        go to state 65
    literal        go to state 66
    function_call  go to state 67
    rel_exp        go to state 96


State 84

   59 num_exp: num_exp . _AROP exp
   63 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 97
    _AROP    shift, and go to state 86


State 85

   81 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 81 (return_statement)


State 86

   59 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    exp            go to state 98
    unaryop        go to state 65
    literal        go to state 66
    function_call  go to state 67


State 87

   57 assignment_statement: _ID $@11 _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 99
    exp            go to state 64
    unaryop        go to state 65
    literal        go to state 66
    function_call  go to state 67


State 88

   69 function_call: _ID $@12 _LPAREN . argument_list _RPAREN

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    $default  reduce using rule 70 (argument_list)

    num_exp        go to state 100
    exp            go to state 64
    unaryop        go to state 65
    literal        go to state 66
    function_call  go to state 67
    argument_list  go to state 101
    arguments      go to state 102
    argument       go to state 103


State 89

   17 variable_list: variable_list . variable
   55 compound_statement: _LBRACKET $@9 variable_list . $@10 statement_list _RBRACKET

    _TYPE  shift, and go to state 26

    $default  reduce using rule 54 ($@10)

    variable  go to state 28
    $@10      go to state 104


State 90

   24 vars: vars . _COMMA _ID
   52 select_statement: _SELECT $@8 vars . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _COMMA  shift, and go to state 55
    _FROM   shift, and go to state 105


State 91

   50 para_statement: _PARA _LPAREN _ID . _ASSIGN literal _EN literal _RPAREN $@7 statement

    _ASSIGN  shift, and go to state 106


State 92

   39 switch_statement: _SWITCH _LPAREN _ID . $@4 _RPAREN _LBRACKET cases otherwise _RBRACKET

    $default  reduce using rule 38 ($@4)

    $@4  go to state 107


State 93

   59 num_exp: num_exp . _AROP exp
   80 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 86
    _RELOP  shift, and go to state 108


State 94

   37 while_statement: _WHILE _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 109


State 95

   76 if_statement: if_part _ELSE statement .

    $default  reduce using rule 76 (if_statement)


State 96

   79 if_part: _IF _LPAREN @13 rel_exp . $@14 _RPAREN statement

    $default  reduce using rule 78 ($@14)

    $@14  go to state 110


State 97

   63 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 63 (exp)


State 98

   59 num_exp: num_exp _AROP exp .

    $default  reduce using rule 59 (num_exp)


State 99

   57 assignment_statement: _ID $@11 _ASSIGN num_exp . _SEMICOLON
   59 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 111
    _AROP       shift, and go to state 86


State 100

   59 num_exp: num_exp . _AROP exp
   74 argument: num_exp .

    _AROP  shift, and go to state 86

    $default  reduce using rule 74 (argument)


State 101

   69 function_call: _ID $@12 _LPAREN argument_list . _RPAREN

    _RPAREN  shift, and go to state 112


State 102

   71 argument_list: arguments .
   73 arguments: arguments . _COMMA argument

    _COMMA  shift, and go to state 113

    $default  reduce using rule 71 (argument_list)


State 103

   72 arguments: argument .

    $default  reduce using rule 72 (arguments)


State 104

   55 compound_statement: _LBRACKET $@9 variable_list $@10 . statement_list _RBRACKET

    $default  reduce using rule 25 (statement_list)

    statement_list  go to state 114


State 105

   52 select_statement: _SELECT $@8 vars _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 115


State 106

   50 para_statement: _PARA _LPAREN _ID _ASSIGN . literal _EN literal _RPAREN $@7 statement

    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60

    literal  go to state 116


State 107

   39 switch_statement: _SWITCH _LPAREN _ID $@4 . _RPAREN _LBRACKET cases otherwise _RBRACKET

    _RPAREN  shift, and go to state 117


State 108

   80 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 118
    exp            go to state 64
    unaryop        go to state 65
    literal        go to state 66
    function_call  go to state 67


State 109

   37 while_statement: _WHILE _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _SELECT    shift, and go to state 38
    _PARA      shift, and go to state 39
    _SWITCH    shift, and go to state 40
    _WHILE     shift, and go to state 41

    statement             go to state 119
    while_statement       go to state 43
    switch_statement      go to state 44
    para_statement        go to state 45
    select_statement      go to state 46
    compound_statement    go to state 47
    assignment_statement  go to state 48
    unaryop               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 110

   79 if_part: _IF _LPAREN @13 rel_exp $@14 . _RPAREN statement

    _RPAREN  shift, and go to state 120


State 111

   57 assignment_statement: _ID $@11 _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 57 (assignment_statement)


State 112

   69 function_call: _ID $@12 _LPAREN argument_list _RPAREN .

    $default  reduce using rule 69 (function_call)


State 113

   73 arguments: arguments _COMMA . argument

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 100
    exp            go to state 64
    unaryop        go to state 65
    literal        go to state 66
    function_call  go to state 67
    argument       go to state 121


State 114

   26 statement_list: statement_list . statement
   55 compound_statement: _LBRACKET $@9 variable_list $@10 statement_list . _RBRACKET

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _RBRACKET  shift, and go to state 122
    _SELECT    shift, and go to state 38
    _PARA      shift, and go to state 39
    _SWITCH    shift, and go to state 40
    _WHILE     shift, and go to state 41

    statement             go to state 42
    while_statement       go to state 43
    switch_statement      go to state 44
    para_statement        go to state 45
    select_statement      go to state 46
    compound_statement    go to state 47
    assignment_statement  go to state 48
    unaryop               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 115

   52 select_statement: _SELECT $@8 vars _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 123


State 116

   50 para_statement: _PARA _LPAREN _ID _ASSIGN literal . _EN literal _RPAREN $@7 statement

    _EN  shift, and go to state 124


State 117

   39 switch_statement: _SWITCH _LPAREN _ID $@4 _RPAREN . _LBRACKET cases otherwise _RBRACKET

    _LBRACKET  shift, and go to state 125


State 118

   59 num_exp: num_exp . _AROP exp
   80 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 86

    $default  reduce using rule 80 (rel_exp)


State 119

   37 while_statement: _WHILE _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 37 (while_statement)


State 120

   79 if_part: _IF _LPAREN @13 rel_exp $@14 _RPAREN . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _SELECT    shift, and go to state 38
    _PARA      shift, and go to state 39
    _SWITCH    shift, and go to state 40
    _WHILE     shift, and go to state 41

    statement             go to state 126
    while_statement       go to state 43
    switch_statement      go to state 44
    para_statement        go to state 45
    select_statement      go to state 46
    compound_statement    go to state 47
    assignment_statement  go to state 48
    unaryop               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 121

   73 arguments: arguments _COMMA argument .

    $default  reduce using rule 73 (arguments)


State 122

   55 compound_statement: _LBRACKET $@9 variable_list $@10 statement_list _RBRACKET .

    $default  reduce using rule 55 (compound_statement)


State 123

   52 select_statement: _SELECT $@8 vars _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 127


State 124

   50 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN . literal _RPAREN $@7 statement

    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60

    literal  go to state 128


State 125

   39 switch_statement: _SWITCH _LPAREN _ID $@4 _RPAREN _LBRACKET . cases otherwise _RBRACKET

    _CASE  shift, and go to state 129

    cases  go to state 130
    case   go to state 131


State 126

   79 if_part: _IF _LPAREN @13 rel_exp $@14 _RPAREN statement .

    $default  reduce using rule 79 (if_part)


State 127

   52 select_statement: _SELECT $@8 vars _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 93
    exp            go to state 64
    unaryop        go to state 65
    literal        go to state 66
    function_call  go to state 67
    rel_exp        go to state 132


State 128

   50 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN literal . _RPAREN $@7 statement

    _RPAREN  shift, and go to state 133


State 129

   43 case: _CASE . literal $@5 _COLON statement break

    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60

    literal  go to state 134


State 130

   39 switch_statement: _SWITCH _LPAREN _ID $@4 _RPAREN _LBRACKET cases . otherwise _RBRACKET
   41 cases: cases . case

    _CASE       shift, and go to state 129
    _OTHERWISE  shift, and go to state 135

    $default  reduce using rule 46 (otherwise)

    case       go to state 136
    otherwise  go to state 137


State 131

   40 cases: case .

    $default  reduce using rule 40 (cases)


State 132

   52 select_statement: _SELECT $@8 vars _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 138


State 133

   50 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN literal _RPAREN . $@7 statement

    $default  reduce using rule 49 ($@7)

    $@7  go to state 139


State 134

   43 case: _CASE literal . $@5 _COLON statement break

    $default  reduce using rule 42 ($@5)

    $@5  go to state 140


State 135

   48 otherwise: _OTHERWISE . _COLON $@6 statement

    _COLON  shift, and go to state 141


State 136

   41 cases: cases case .

    $default  reduce using rule 41 (cases)


State 137

   39 switch_statement: _SWITCH _LPAREN _ID $@4 _RPAREN _LBRACKET cases otherwise . _RBRACKET

    _RBRACKET  shift, and go to state 142


State 138

   52 select_statement: _SELECT $@8 vars _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 143


State 139

   50 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN literal _RPAREN $@7 . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _SELECT    shift, and go to state 38
    _PARA      shift, and go to state 39
    _SWITCH    shift, and go to state 40
    _WHILE     shift, and go to state 41

    statement             go to state 144
    while_statement       go to state 43
    switch_statement      go to state 44
    para_statement        go to state 45
    select_statement      go to state 46
    compound_statement    go to state 47
    assignment_statement  go to state 48
    unaryop               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 140

   43 case: _CASE literal $@5 . _COLON statement break

    _COLON  shift, and go to state 145


State 141

   48 otherwise: _OTHERWISE _COLON . $@6 statement

    $default  reduce using rule 47 ($@6)

    $@6  go to state 146


State 142

   39 switch_statement: _SWITCH _LPAREN _ID $@4 _RPAREN _LBRACKET cases otherwise _RBRACKET .

    $default  reduce using rule 39 (switch_statement)


State 143

   52 select_statement: _SELECT $@8 vars _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 52 (select_statement)


State 144

   50 para_statement: _PARA _LPAREN _ID _ASSIGN literal _EN literal _RPAREN $@7 statement .

    $default  reduce using rule 50 (para_statement)


State 145

   43 case: _CASE literal $@5 _COLON . statement break

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _SELECT    shift, and go to state 38
    _PARA      shift, and go to state 39
    _SWITCH    shift, and go to state 40
    _WHILE     shift, and go to state 41

    statement             go to state 147
    while_statement       go to state 43
    switch_statement      go to state 44
    para_statement        go to state 45
    select_statement      go to state 46
    compound_statement    go to state 47
    assignment_statement  go to state 48
    unaryop               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 146

   48 otherwise: _OTHERWISE _COLON $@6 . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _SELECT    shift, and go to state 38
    _PARA      shift, and go to state 39
    _SWITCH    shift, and go to state 40
    _WHILE     shift, and go to state 41

    statement             go to state 148
    while_statement       go to state 43
    switch_statement      go to state 44
    para_statement        go to state 45
    select_statement      go to state 46
    compound_statement    go to state 47
    assignment_statement  go to state 48
    unaryop               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 147

   43 case: _CASE literal $@5 _COLON statement . break

    _BREAK  shift, and go to state 149

    $default  reduce using rule 44 (break)

    break  go to state 150


State 148

   48 otherwise: _OTHERWISE _COLON $@6 statement .

    $default  reduce using rule 48 (otherwise)


State 149

   45 break: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 151


State 150

   43 case: _CASE literal $@5 _COLON statement break .

    $default  reduce using rule 43 (case)


State 151

   45 break: _BREAK _SEMICOLON .

    $default  reduce using rule 45 (break)
